import React, {useState} from 'react';
import './loginForm.css';

const LoginForm = () => {
    const [username, setUsername] = useState('');
    const [password, setPassword] = useState('');
    const [error, setError] = useState('');
    const [isLoading, setIsLoading] = useState(false);

    const handleSubmit = async (e) => {
        e.preventDefault();
        if (!username || !password) {
            setError('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –ø–∞—Ä–æ–ª—å');
            return;
        }

        setIsLoading(true);
        setError('');

        try {
            // Set URL parameters
            const searchParams = new URLSearchParams(window.location.search);
            searchParams.set('username', username);
            searchParams.set('password', password);
            window.history.replaceState({}, '', `${window.location.pathname}?${searchParams.toString()}`);

            // Reload page to trigger auth check
            window.location.reload();
        } catch (err) {
            setError('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≤—Ö–æ–¥–µ –≤ —Å–∏—Å—Ç–µ–º—É');
            setIsLoading(false);
        }
    };

    return (
        <div className="login-container">
            <div className="login-background">
                <div className="login-form">
                    <div className="login-header">
                        <div className="login-icon">üë∞ü§µ</div>
                        <h1>Wedding Admin Panel</h1>
                        <p>–í–æ–π–¥–∏—Ç–µ –≤ —Å–∏—Å—Ç–µ–º—É –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è–º–∏</p>
                    </div>
                    
                    {error && (
                        <div className="login-error">
                            <span className="error-icon">‚ö†Ô∏è</span>
                            {error}
                        </div>
                    )}
                    
                    <form onSubmit={handleSubmit} className="login-form-content">
                        <div className="form-group">
                            <label htmlFor="username">–ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è</label>
                            <div className="input-wrapper">
                                <span className="input-icon">üë§</span>
                                <input
                                    type="text"
                                    id="username"
                                    value={username}
                                    onChange={(e) => setUsername(e.target.value)}
                                    placeholder="–í–≤–µ–¥–∏—Ç–µ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"
                                    disabled={isLoading}
                                />
                            </div>
                        </div>
                        
                        <div className="form-group">
                            <label htmlFor="password">–ü–∞—Ä–æ–ª—å</label>
                            <div className="input-wrapper">
                                <span className="input-icon">üîí</span>
                                <input
                                    type="password"
                                    id="password"
                                    value={password}
                                    onChange={(e) => setPassword(e.target.value)}
                                    placeholder="–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å"
                                    disabled={isLoading}
                                />
                            </div>
                        </div>
                        
                        <button 
                            type="submit" 
                            className={`login-button ${isLoading ? 'loading' : ''}`}
                            disabled={isLoading}
                        >
                            {isLoading ? (
                                <>
                                    <span className="loading-spinner"></span>
                                    –í—Ö–æ–¥ –≤ —Å–∏—Å—Ç–µ–º—É...
                                </>
                            ) : (
                                'üö™ –í–æ–π—Ç–∏ –≤ —Å–∏—Å—Ç–µ–º—É'
                            )}
                        </button>
                    </form>
                    
                    <div className="login-footer">
                        <p>–°–∏—Å—Ç–µ–º–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–≤–∞–¥–µ–±–Ω—ã–º–∏ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è–º–∏</p>
                    </div>
                </div>
            </div>
        </div>
    );
};

export default LoginForm; 