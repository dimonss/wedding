import React, { useState } from 'react';
import ModalPortal from '../ModalPortal/ModalPortal';
import './TestModalError.css';

const TestModalError = ({ isOpen, onClose }) => {
    const [shouldThrow, setShouldThrow] = useState(false);

    // –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –æ—à–∏–±–æ–∫ –≤ –º–æ–¥–∞–ª—å–Ω–æ–º –æ–∫–Ω–µ
    const throwRenderError = () => {
        setShouldThrow(true);
    };

    const throwEventError = () => {
        throw new Error('–û—à–∏–±–∫–∞ –≤ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–µ —Å–æ–±—ã—Ç–∏—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞! üéØ');
    };

    const throwAsyncError = async () => {
        // –°–∏–º—É–ª–∏—Ä—É–µ–º –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—É—é –æ—à–∏–±–∫—É
        await new Promise(resolve => setTimeout(resolve, 100));
        throw new Error('–ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞ –≤ –º–æ–¥–∞–ª—å–Ω–æ–º –æ–∫–Ω–µ! ‚è∞');
    };

    const throwStateError = () => {
        // –°–∏–º—É–ª–∏—Ä—É–µ–º –æ—à–∏–±–∫—É –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —Å–æ—Å—Ç–æ—è–Ω–∏—è
        const invalidState = null;
        invalidState.someProperty = 'value'; // TypeError
    };

    // –ï—Å–ª–∏ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –æ—à–∏–±–∫–∞ –≤ —Ä–µ–Ω–¥–µ—Ä–µ
    if (shouldThrow) {
        throw new Error('–û—à–∏–±–∫–∞ –≤ —Ä–µ–Ω–¥–µ—Ä–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞! üé≠');
    }

    return (
        <ModalPortal isOpen={isOpen}>
            <div className="test-modal-overlay">
                <div className="test-modal-content">
                    <h3>üß™ –¢–µ—Å—Ç ErrorBoundary –≤ –º–æ–¥–∞–ª—å–Ω–æ–º –æ–∫–Ω–µ</h3>
                    <p>–ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫–∏ –Ω–∏–∂–µ, —á—Ç–æ–±—ã –ø—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –æ—à–∏–±–∫–∏ –≤ –º–æ–¥–∞–ª—å–Ω–æ–º –æ–∫–Ω–µ:</p>
                    
                    <div className="test-modal-buttons">
                        <button 
                            className="test-modal-button render"
                            onClick={throwRenderError}
                        >
                            üé≠ –û—à–∏–±–∫–∞ –≤ —Ä–µ–Ω–¥–µ—Ä–µ
                        </button>
                        
                        <button 
                            className="test-modal-button event"
                            onClick={throwEventError}
                        >
                            üéØ –û—à–∏–±–∫–∞ –≤ —Å–æ–±—ã—Ç–∏–∏
                        </button>
                        
                        <button 
                            className="test-modal-button async"
                            onClick={throwAsyncError}
                        >
                            ‚è∞ –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞
                        </button>
                        
                        <button 
                            className="test-modal-button state"
                            onClick={throwStateError}
                        >
                            üîÑ –û—à–∏–±–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è
                        </button>
                    </div>
                    
                    <div className="test-modal-actions">
                        <button 
                            className="test-modal-button close"
                            onClick={onClose}
                        >
                            ‚úñÔ∏è –ó–∞–∫—Ä—ã—Ç—å
                        </button>
                    </div>
                </div>
            </div>
        </ModalPortal>
    );
};

export default TestModalError; 